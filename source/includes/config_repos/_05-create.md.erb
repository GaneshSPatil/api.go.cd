## Create a Config repo object

```shell
$   curl 'http://ci.example.com/go/api/admin/config_repos' \
  -u 'username:password' \
  -H 'Accept:<%= data.apis.versions.config_repos %>' \
  -H 'Content-Type:application/json' \
  -X POST -d '{
    "id": "repo-2",
    "plugin_id": "json.config.plugin",
    "material": {
      "type": "git",
      "attributes": {
        "url": "https://github.com/config-repo/gocd-json-config-example2.git",
        "destination": null,
        "filter": null,
        "invert_filter": false,
        "name": null,
        "auto_update": true,
        "branch": "master",
        "submodule_folder": null,
        "shallow_clone": false
      }
    },
    "configuration": [
      {
       "key": "pattern",
       "value": "*.myextension"
     }
    ]
  }'
```


> The above command returns JSON structured like this:

```http
HTTP/1.1 200 OK
Content-Type: <%= data.apis.versions.scm %>; charset=utf-8
```

```json
{
  "_links": {
    "self": {
      "href": "https://ci.example.com/go/api/admin/config_repos/repo-2"
    },
    "doc": {
      "href": "https://api.gocd.org/#config-repos"
    },
    "find": {
      "href": "https://ci.example.com/go/api/admin/config_repos/:id"
    }
  },
  "id": "repo-2",
  "plugin_id": "json.config.plugin",
  "material": {
    "type": "git",
    "attributes": {
      "url": "https://github.com/config-repo/gocd-json-config-example2.git",
      "destination": null,
      "filter": null,
      "invert_filter": false,
      "name": null,
      "auto_update": true,
      "branch": "master",
      "submodule_folder": null,
      "shallow_clone": false
    }
  },
  "configuration": [
    {
      "key": "pattern",
      "value": "*.myextension"
    }
  ]
}
```

Create a config repo object.


<%= available_since('17.8.0') %>

<p class='http-request-heading'>HTTP Request</p>

`POST /go/api/admin/config_repos`

<p class='http-request-return-description'>Returns</p>

A new [config-repo](#the-config-repo-object) object
